import requests
import http.cookiejar
import urllib.parse

import json 
import re
import hashlib
# super useful time.sleep 
import time
from fake_useragent import UserAgent
import Module_MailPhone
import names
from spotify import getcode_1, getcode_2

def getproxy_fb(key):
    while True:
        try:
            r = requests.get(f"http://api.proxyfb.com/api/getProxy.php?key={key}")
            timeout = int(r.json()['timeout'])
            if timeout <= 1100:
                return getnew_proxy_fb(key)
            return r.json()['proxy']
        except:
            try:
                return getnew_proxy_fb(key)
            except:
                m = 1
        time.sleep(10)


def getnew_proxy_fb(key):
    r = requests.get(f"http://api.proxyfb.com/api/changeProxy.php?key={key}&location=0")
    return r.json()['proxy']

datamail = set(open('Build_Acc\\livethang3_final_6_4.txt','r').read().split("\n"))

exist = open('regIG\\reghis.txt','r').read()

def check(keyproxy):
            
    while True:
        try:
            final_mail = datamail.pop()
            user_mail = final_mail.split("|")
           
            us = final_mail[0]
        except:
            continue
        try:
            BASE_URL = 'https://www.instagram.com'
            MID_URL = 'https://www.instagram.com/web/__mid/'
            LOGIN_URL = 'https://www.instagram.com/accounts/login/ajax/'

                    # define a session 
            req = requests.Session() 
                    # and here we have one of the most important things ever in scraping: the User Agent!
                    # speak about network condition in the inspection module
            ua = UserAgent()
            ua = str(ua.safari)
            #proxyies = getproxy_fb(keyproxy)
            '''
            proxy = {
                        'http': f'http://{proxyies}',
                        'https': f'http://{proxyies}',
                        'socks4': f'socks4://{proxyies}',
                        'socks5': f'socks5://{proxyies}'
                }
            '''

            user_agent = ua
            header_ua = {
                        'user-agent':user_agent
            }
                    # hit the end point
            response = req.get(BASE_URL,headers=header_ua)
                    # from here we can start to extract the csrf_token 
                    #A CSRF token is a unique, secret, unpredictable value that is generated by the server-side application
                    #  and transmitted to the client in such a way that it is included in a subsequent HTTP request
                    #  made by the client. When the later request is made, 
                    # the server-side application validates that the request includes the expected token and rejects 
                    # the request if the token is missing or invalid.
                    # the CSRF token is from the headers response when visiting the homepage
            csrfToken = re.findall(r'"csrf_token":"(.*?)"', response.text)[0]
                    # get the cookies 
                    # the mid is the session user id
            device_id =  re.findall(r'"device_id":"(.*?)"', response.text)[1]
            Ig_App_Id = re.findall(r'"X-IG-App-ID":"(.*?)"', response.text)[0]
                    
            mid = req.get(MID_URL,headers=header_ua).text
          
                    # create the headers 
            import random
            headers = {
                                'cookie': f"ig_cb=1; csrftoken={csrfToken}; mid={mid}; ig_did={device_id};ps_n=0; ps_l=0;",
                                'referer': f'https://www.instagram.com/{us}/', 
                                'X-CSRFToken': csrfToken,
                                'user-agent': user_agent,
                                'Viewport-Width': '1280',
                                'X-Asbd-Id': f'129{random.randint(100,999)}',
                                'X-Ig-App-Id': Ig_App_Id,
                                'X-Ig-Www-Claim': '0',
                                'X-Instagram-Ajax': f'101260{random.randint(1000,9999)}',
                                'X-Requested-With': 'XMLHttpRequest',
                                'X-Web-Device-Id': device_id
                                }
            response = req.get(f'https://www.instagram.com/api/v1/users/web_profile_info/?username={us}',headers=headers)
            
            if 'data' in str(response.text):
                print(response.text)
                with open("regIg\\live.txt",'a') as file:
                    file.write(f"{final_mail}\n")
        except:
            m = 1
            datamail.add(final_mail)



data_key = ["7946a1b3757f21d934ac0bcf3ae2a5c5","148d49c204674fbe4b7c5f267a48a821","a58200672e01270cf047c140416f67d3"]*20



luong = int(input())

import threading
for i in range(luong):
    threading.Thread(target=check,args=(data_key[i],)).start()
import requests
import http.cookiejar
import urllib.parse

import json 
import re
import hashlib
# super useful time.sleep 
import time
from fake_useragent import UserAgent
import Module_MailPhone
import names
from spotify import getcode_1, getcode_2
import random


def getproxy_fb(key):
    while True:
        try:
            r = requests.get(f"http://api.proxyfb.com/api/getProxy.php?key={key}")
            timeout = int(r.json()['timeout'])
            if timeout <= 1100:
                return getnew_proxy_fb(key)
            return r.json()['proxy']
        except:
            try:
                return getnew_proxy_fb(key)
            except:
                m = 1
        time.sleep(10)


def getnew_proxy_fb(key):
    r = requests.get(f"http://api.proxyfb.com/api/changeProxy.php?key={key}&location=0")
    return r.json()['proxy']

datamail = set(open('regIG\\mail.txt','r').read().split("\n"))

exist = open('regIG\\reghis.txt','r').read()

def check(keyproxy):
    
    while True:
        cnt = 5000
        proxylist = requests.get("https://api.proxyscrape.com/v3/free-proxy-list/get?request=displayproxies&proxy_format=ipport&format=text&timeout=20000").text.replace("\r","").split("\n")
        while len(proxylist) > 0:
            try:
                
                final_mail = datamail.pop()
                user_mail = final_mail.split("|")
                email = user_mail[0]
                if email in exist:
                    continue
                passmail = user_mail[1]
            except ValueError as e:
                print(e)
                continue
            try:
                BASE_URL = 'https://www.instagram.com'
                MID_URL = 'https://www.instagram.com/web/__mid/'
                LOGIN_URL = 'https://www.instagram.com/accounts/login/ajax/'

                        # define a session 
                req = requests.Session() 
                        # and here we have one of the most important things ever in scraping: the User Agent!
                        # speak about network condition in the inspection module
                ua = UserAgent()
                ua = str(ua.safari)
                random_index = random.randrange(len(proxylist))
                proxyies = proxylist.pop(random_index)
             
                proxy = {
                            'http': f'http://{proxyies}',
                            'https': f'http://{proxyies}',
                            'socks4': f'socks4://{proxyies}',
                            'socks5': f'socks5://{proxyies}'
                    }
                country = requests.get(f"https://ipinfo.io/widget/demo/{proxyies.split(':')[0]}",proxies=proxy,timeout=30).json()['data']['country']
               

                user_agent = ua
                header_ua = {
                            'user-agent':user_agent
                }
                        # hit the end point
                response = req.get(BASE_URL,headers=header_ua, proxies=proxy,timeout=30)
                #response = req.get(BASE_URL,headers=header_ua)
                        # from here we can start to extract the csrf_token 
                        #A CSRF token is a unique, secret, unpredictable value that is generated by the server-side application
                        #  and transmitted to the client in such a way that it is included in a subsequent HTTP request
                        #  made by the client. When the later request is made, 
                        # the server-side application validates that the request includes the expected token and rejects 
                        # the request if the token is missing or invalid.
                        # the CSRF token is from the headers response when visiting the homepage
            
                csrfToken = re.findall(r'"csrf_token":"(.*?)"', response.text)[0]
                        # get the cookies 
                        # the mid is the session user id
                device_id =  re.findall(r'"device_id":"(.*?)"', response.text)[1]
                Ig_App_Id = re.findall(r'"X-IG-App-ID":"(.*?)"', response.text)[0]
                        
                mid = req.get(MID_URL,headers=header_ua, proxies=proxy).text
                #mid = req.get(MID_URL,headers=header_ua).text
                
            
                        # create the headers 
                
                headers = {
                                    'cookie': f"ig_cb=1; csrftoken={csrfToken}; mid={mid}; ig_did={device_id};ps_n=0; ps_l=0;",
                                    'referer': 'https://www.instagram.com/accounts/emailsignup/', 
                                    'X-CSRFToken': csrfToken,
                                    'user-agent': user_agent,
                                    'Viewport-Width': '1280',
                                    'X-Asbd-Id': f'129{random.randint(100,999)}',
                                    'X-Ig-App-Id': Ig_App_Id,
                                    'X-Ig-Www-Claim': '0',
                                    'X-Instagram-Ajax': f'101260{random.randint(1000,9999)}',
                                    'X-Requested-With': 'XMLHttpRequest',
                                    'X-Web-Device-Id': device_id
                                    }
                us = email.split("@")[0] + str(random.randint(19000, 2067677))
                name = names.get_full_name()
                        # create a payload as we going to run a post request 
                payload = {
                                'enc_password': f"#PWD_INSTAGRAM_BROWSER:0:{int(time.time())}:{'Taphoababyjukyo55'}",
                                'email': email,
                                'first_name': name,
                                'username': us,
                                'client_id': device_id,
                                'seamless_login_enabled': 1,
                                'opt_into_one_tap': False
                            }
                

                        # login in action 
                response_login = req.post('https://www.instagram.com/api/v1/web/accounts/web_create_ajax/attempt/', data=payload, headers=headers, proxies=proxy)        
                #response_login = req.post('https://www.instagram.com/api/v1/web/accounts/web_create_ajax/attempt/', data=payload, headers=headers)                
                data = response_login.json()   
                
                time.sleep(5)
                payload_vermail = {
                    'device_id': device_id,
                    'email': email,
                }

                response_login = req.post('https://www.instagram.com/api/v1/accounts/send_verify_email/', data=payload_vermail, headers=headers, proxies=proxy)     
                #response_login = req.post('https://www.instagram.com/api/v1/accounts/send_verify_email/', data=payload_vermail, headers=headers)                   
                data = response_login.json() 
                
                time.sleep(5)
                if data['email_sent']:
                    code = getcode_1(email,passmail)
                    


                    payload_sendcode = {
                        'code': code,
                        'device_id': device_id,
                        'email': email,
                    }

                    response_login = req.post('https://www.instagram.com/api/v1/accounts/check_confirmation_code/', data=payload_sendcode, headers=headers, proxies=proxy) 
                    #response_login = req.post('https://www.instagram.com/api/v1/accounts/check_confirmation_code/', data=payload_sendcode, headers=headers)                 
                    data = response_login.json()  
                      
                    time.sleep(5)
                    signup_code = data['signup_code']
                    user_info = {
                    'enc_password': f"#PWD_INSTAGRAM_BROWSER:0:{int(time.time())}:{'Taphoababyjukyo55'}",
                        'day': 7,
                        'email': email,
                        'first_name': name,
                        'month': 6,
                        'username': us ,
                        'year': 2000,
                        'client_id': device_id,
                        'seamless_login_enabled': 1,
                        'tos_version': 'row',
                        'force_sign_up_code': signup_code,
                    }

                    response_login = req.post('https://www.instagram.com/api/v1/web/accounts/web_create_ajax/', data=user_info, headers=headers, proxies=proxy)            
                    #response_login = req.post('https://www.instagram.com/api/v1/web/accounts/web_create_ajax/', data=user_info, headers=headers)            
                    data = response_login.json()
                    print(data)
                    if data['account_created'] or 'user_id' in str(data):
                        with open('regIG\\reghis_us.txt','a') as file:
                            file.write(f"{us}|Taphoababyjukyo55|{email}|{passmail}|{country}\n")
                    else:
                        datamail.add(final_mail)
            except:
                m = 1
                datamail.add(final_mail)



data_key = ["23.142.84.252:50267","23.142.84.252:49686","23.142.84.252:49057","23.142.84.252:49311","23.142.84.252:50029"]*20






luong = int(input())

import threading
for i in range(luong):
    threading.Thread(target=check,args=(data_key[i],)).start()


